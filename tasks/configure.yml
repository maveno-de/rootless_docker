---


- name: Generate Docker daemon configuration for context system user
  become: true
  vars:
    dockerDnsConfiguration:
      dns: "{{ forksDockerRecursiveNameservers }}"
      log-driver: json-file
      log-opts:
        max-size: '30m'
        max-file: '3'
  copy:
    content: >-
      {{ dockerDnsConfiguration | to_json }}
    dest: "{{ forksDockerHomeDirectory }}/.config/docker/daemon.json"
    owner: "{{ forksDockerSystemUsername }}"
    group: "{{ forksDockerSystemUsername }}"
    mode: 0644
    force: true


- name: Generate empty Docker profile for context system user
  when: forksDockerNoSeccompProfile
  become: true
  copy:
    content: '{}'
    dest: "{{ forksDockerHomeDirectory }}/.config/docker/profile.json"
    owner: "{{ forksDockerSystemUsername }}"
    group: "{{ forksDockerSystemUsername }}"
    mode: 0644
    force: true

- name: Path Docker user service file with option referring to empty profile
  when: forksDockerNoSeccompProfile
  become: true
  replace:
    path: >-
      {{ forksDockerHomeDirectory }}/.config/systemd/user/docker.service
    regexp: >-
      ^(ExecStart=.*)$
    replace: >-
      \1 --seccomp-profile {{ forksDockerHomeDirectory }}/.config/docker/profile.json
      {% if ansible_distribution == 'Debian' and ansible_distribution_major_version|int >= 11 %}
      --exec-opt native.cgroupdriver=cgroupfs{% endif %}


- name: Restart rootless Docker service
  become: true
  become_user: "{{ forksDockerSystemUsername }}"
  remote_user: "{{ forksDockerSystemUsername }}"
  systemd:
    name: docker.service
    state: restarted
    daemon-reload: yes
    scope: user
  environment:
    XDG_RUNTIME_DIR: "/run/user/{{ forkUserIdShellResult.stdout }}"


...
